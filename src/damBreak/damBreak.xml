<?xml version="1.0" ?>

<!-- Parameters set by the user. -->

<!-- For the dam break problem, the geometry is fixed, and it can be changed
     only by changing the source code damBreak.cpp. The height of the
     simulation domain is used as a reference length to non-dimensionalize
     the problem. -->

<fluid>
    <!-- Density. -->
    <rho> 1000.0 </rho>
    <!-- Jesus Number: Je = sigma / (rho * g * L^2).
         From this, surface tension is calculated in the code.
         If Je = 0, then the surface tension is not modeled. -->
    <Je> 0.01 </Je>
    <!-- Galilei Number: Ga = g * L^3 / nu^2.
         From this, kinematic viscosity is calculated in the code.
         Gravity is always 1 in dimensionless units
         (because it defines the time scale), so Ga cannot be 0. -->
    <Ga> 98000000000.0 </Ga>
    <!-- Contact angle in degrees. If the contact angle is negative, then the
         contact angle algorithm is deactivated. For non-wetting cases use
         a contact angle between 90 and 180 degrees. For wetting cases use
         a contact angle between 0 and 90 degrees. -->
    <contactAngle> 80.0 </contactAngle>
</fluid>

<numerics>
    <!-- Total number of lattice nodes in the unit length. -->
    <resolution> 101 </resolution>
    <!-- Lattice velocity: dt / dx. -->
    <uLB> 0.01 </uLB>
    <!-- Maximum number of iterations. -->
    <maxIter> 1000000 </maxIter>
    <!-- Smagorinsky LES model parameter. -->
    <cSmago> 0.14 </cSmago>
    <!-- Use a model where bubbles have an internal pressure relative to their volume, or not. -->
    <useBubblePressureModel> false </useBubblePressureModel>
    <!-- If a bubble pressure model is used freeze the ambient space or not. -->
    <freezeLargestBubble> true </freezeLargestBubble>
    <!-- Parameter of the bubble pressure model. The bubbleVolumeRatio must be >= 1.0. -->
    <bubbleVolumeRatio> 1.0 </bubbleVolumeRatio>
    <!-- Parameters of the bubble pressure model:
         If alpha or beta < 0 then: bubble_pressure = reference_pressure * reference_volume / current_volume.
         Else: bubble_pressure = reference_pressure * [1 + alpha * (1 - current_volume/reference_volume)^beta].
    -->
    <alpha> -1.0 </alpha>
    <beta> -1.0 </beta>
</numerics>

<output>
    <!-- Number of iterations for terminal output. -->
    <statIter> 20 </statIter>
    <!-- Number of iterations for disk output. -->
    <outIter> 100 </outIter>
</output>

